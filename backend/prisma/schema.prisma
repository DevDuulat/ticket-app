// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  OPERATOR
  SUPERVISOR
}

enum TicketStatus {
  OPEN
  IN_PROGRESS
  CLOSED
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String
  role      Role
  tickets   Ticket[] @relation("AssignedTickets")
  comments  Comment[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  subscriber  String
  status      TicketStatus @default(OPEN)

  assignedTo  User?     @relation("AssignedTickets", fields: [assignedToId], references: [id])
  assignedToId Int?

  comments    Comment[]

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  author    User     @relation(fields: [authorId], references: [id])
  authorId  Int

  ticket    Ticket   @relation(fields: [ticketId], references: [id])
  ticketId  Int

  createdAt DateTime @default(now())
}
